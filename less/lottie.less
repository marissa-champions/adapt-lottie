.lottie-inner {
  position: relative;
}

.lottie-description,
.lottie-label {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
}

.lottie-description[hidden],
.lottie-label[hidden],
.lottie-fallback[hidden] {
  display: none !important;
}

.lottie-play-pause {
  display: none;
  position: absolute;
  bottom: @component-padding-hoz;
  right: @component-padding-hoz;
  padding: @btn-padding;
  fill: #fff;
  opacity: .3;
  .play-transitions();

  &:hover,
  &:focus {
    opacity: 1;
  }

  svg {
    display: none;
    width: 16px;
    height: 16px;
  }

  &[aria-label="play"] {
    display: block;

    .play {
      display: block;
    }
  }
  &[aria-label="pause"] {
    display: block;

    .pause {
      display: block;
    }
  }
}

.has-pause {
  .lottie-attribution {
    @padding: (@component-padding-hoz * 2) + (@btn-padding * 2) + 16px;
    max-width: calc(100% - @padding);
  }

  &:hover,
  &:focus-within {
    .lottie-play-pause {
      opacity: 1;
    }
  }
}

// Guards
.play-transitions() when (@duration) {
  .do-transition(@duration)
}

.play-transitions() when not (@duration) {
  .do-transition(.25s);
}

.do-transition(@time){
  -webkit-transition: background-color @time ease-in, color @time ease-in, border-color @time ease-in, opacity @time ease-in;
  -moz-transition: background-color @time ease-in, color @time ease-in, border-color @time ease-in, opacity @time ease-in;
  -ms-transition: background-color @time ease-in, color @time ease-in, border-color @time ease-in, opacity @time ease-in;
  transition: background-color @time ease-in, color @time ease-in, border-color @time ease-in, opacity @time ease-in;
}
